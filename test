# -*- coding: utf-8 -*- 
import numpy as np
from keras.layers import Dense
from keras.models import Model
from keras.preprocessing import image
#from keras.applications.vgg19 import preprocess_input
#from keras.applications.inception_v3 import preprocess_input
from keras.applications.inception_resnet_v2 import preprocess_input
#from keras.applications.resnet50 import preprocess_input
from keras.models import load_model

# 加载训练好的模型
#model = load_model('vgg19_model_weights.h5')
model = load_model('InceptionResNetV2_model_weights1.h5')
#model = load_model('inception_v3_model_weights.h5')
#model = load_model('resnet50_model_weights.h5')


image_path = '/home/tutu/data1/test/0343.jpg'

# 加载图像
img = image.load_img(image_path, target_size=(299, 299))

# 图像预处理
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)

# 对图像进行分类
preds = model.predict(x)
#np.argmax(preds,axis=1)
# 输出预测概率
print('Predicted:', preds)

preds = np.asarray(preds)
max_index = np.argmax(preds)
result = np.zeros(np.size(preds))
result[max_index] = 1

print('result:',result)
