from keras import backend as K
from keras.models import load_model
from matplotlib import pyplot as plt
import cv2
import numpy as np
from keras.utils import plot_model


def main():
    model = load_model('/home/tutu/PycharmProjects/python/extract-feture/InceptionResNetV2_model_weights1.h5')
    plot_model(model, to_file='model.png', show_shapes=True)
    images = cv2.imread("/home/tutu/PycharmProjects/python/extract-feture/0722.jpg")
#   Turn the image into an array.
# #  根据载入的训练好的模型的配置，将图像统一尺寸
    image_arr = cv2.resize(images, (299, 299))
#
    image_arr = np.expand_dims(image_arr, axis=0)
# 第一个 model.layers[0],不修改,表示输入数据；
# 第二个model.layers[ ],修改为需要输出的层数的编号[]
    layer_1 = K.function([model.layers[0].input], [model.layers[1].output])
# 只修改inpu_image
    f1 = layer_1([image_arr])[0]
# 第一层卷积后的特征图展示，输出是（1,66,66,32），（样本个数，特征图尺寸长，特征图尺寸宽，特征图个数）
    for _ in range(32):
        show_img = f1[:, :, :, _]
        show_img.shape = [149, 149]
        plt.subplot(4, 8, _ + 1)
        plt.subplot(4, 8, _ + 1)
        plt.imshow(show_img, cmap='gray')
        plt.axis('off')
    plt.show()
    # conv layer: 299
    # layer_1 = K.function([model.layers[0].input], [model.layers[299].output])
    # f1 = layer_1([image_arr])[0]
    # for _ in range(81):
    #     show_img = f1[:, :, :, _]
    #     show_img.shape = [8, 8]
    #     plt.subplot(9, 9, _ + 1)
    #     plt.imshow(show_img, cmap='gray')
    #     plt.axis('off')
    # plt.show()
    # print('This is the end !')


if __name__ == '__main__':
    main()
